package org.litesoft.events.api.v03.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import io.swagger.annotations.ApiModelProperty;
import org.litesoft.alleviative.beans.SetValue;
import org.springframework.validation.annotation.Validated;

/**
 * AbstractAllEventProperties
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-02-11T00:44:24.775Z[GMT]")
@JsonIgnoreProperties(ignoreUnknown = true)
public abstract class AbstractAllEventProperties<T extends AbstractAllEventProperties<T>> extends AbstractCommonEventProperties<T> {

    protected abstract AbstractAllEventPropertiesMD<T> abstractAllEventPropertiesMD();

    protected final AbstractCommonEventPropertiesMD<T> abstractCommonEventPropertiesMD() {
        return abstractAllEventPropertiesMD();
    }

    /**
     * Unique - system assigned.
     *
     * @return id
     **/
    @ApiModelProperty(example = "d290f1ee-6c54-4b01-90e6-d701748f0851", value = "Unique - system assigned.")

    public String getId() {
        return fieldGet( abstractAllEventPropertiesMD().nfId() );
    }

    public void setId( String pId ) {
        fieldSet( abstractAllEventPropertiesMD().nfId(), pId );
    }

    public SetValue<String> onId() {
        return fieldGetSetValue( abstractAllEventPropertiesMD().nfId() );
    }

    public T withId( String pId ) {
        setId( pId );
        return us();
    }

    /**
     * Opaque - generated by the system to support Optomistic locking.
     *
     * @return updateToken
     **/
    @ApiModelProperty(example = "d290f1ee-6c54-4b01-90e6-d701748f0851", value = "Opaque - generated by the system to support Optomistic locking.")

    public String getUpdateToken() {
        return fieldGet( abstractAllEventPropertiesMD().nfUpdateToken() );
    }

    public void setUpdateToken( String pUpdateToken ) {
        fieldSet( abstractAllEventPropertiesMD().nfUpdateToken(), pUpdateToken );
    }

    public SetValue<String> onUpdateToken() {
        return fieldGetSetValue( abstractAllEventPropertiesMD().nfUpdateToken() );
    }

    public T withUpdateToken( String pUpdateToken ) {
        setUpdateToken( pUpdateToken );
        return us();
    }
}
